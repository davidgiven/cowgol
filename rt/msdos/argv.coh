var argv_buffer: uint8[127];
var argv_pointer: [uint8];

sub ArgvInit() is
    argv_pointer := &argv_buffer[0];
    var i: uint8 := 0x81;
    loop
        var c: uint8;
        @asm "mov bl, byte [", i, "]";
        @asm "xor bh, bh";
        @asm "mov al, byte [es:bx]";
        @asm "mov byte [", c, "], al";
        if c == 13 then
            break;
        end if;
        [argv_pointer] := c;
        argv_pointer := @next argv_pointer;
        i := i + 1;
    end loop;

    [argv_pointer] := 0;
    argv_pointer := &argv_buffer[0];
end sub;

# Returns null is there's no next argument.
sub ArgvNext(): (arg: [uint8]) is
	# No more arguments?

	if argv_pointer == nil then
		arg := argv_pointer;
		return;
	end if;

	# Skip leading whitespace.

	var c: uint8;
	loop
		c := [argv_pointer];
		if c != ' ' then
			break;
		end if;
		argv_pointer := argv_pointer + 1;
	end loop;

	arg := argv_pointer;

	# Skip to end of word and terminate.

	loop
		c := [argv_pointer];
		if (c == ' ') or (c == '\n') or (c == 0) then
			break;
		end if;
		argv_pointer := argv_pointer + 1;
	end loop;
	[argv_pointer] := 0;

	if c == ' ' then
		argv_pointer := argv_pointer + 1;
	else
		argv_pointer := 0 as [uint8];
	end if;
end sub;


