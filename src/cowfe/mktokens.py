tokens = [
    ("EOF", " EOF"),
    ("ID", " identifier"),
    ("STRING", " string"),
    ("NUMBER", " number"),
    ("TYPE", " type"),
    ("ALIAS", "@alias"),
    ("ASM", "@asm"),
    ("AT", "@at"),
    ("BYTESOF", "@bytesof"),
    ("DECL", "@decl"),
    ("INDEXOF", "@indexof"),
    ("IMPL", "@impl"),
    ("SIZEOF", "@sizeof"),
    ("NEXT", "@next"),
    ("PREV", "@prev"),
    ("AND", "and"),
    ("AS", "as"),
    ("BREAK", "break"),
    ("CASE", "case"),
    ("CONST", "const"),
    ("CONTINUE", "continue"),
    ("ELSE", "else"),
    ("ELSEIF", "elseif"),
    ("END", "end"),
    ("EXTERN", "extern"),
    ("IF", "if"),
    ("IS", "is"),
    ("INT", "int"),
    ("INTERFACE", "interface"),
    ("IMPLEMENTS", "implements"),
    ("LOOP", "loop"),
    ("NOT", "not"),
    ("OR", "or"),
    ("RECORD", "record"),
    ("RETURN", "return"),
    ("SUB", "sub"),
    ("THEN", "then"),
    ("TYPEDEF", "typedef"),
    ("VAR", "var"),
    ("WHEN", "when"),
    ("WHILE", "while"),
    ("PERCENT", "percent"),
    ("INCLUDE", "include"),
    ("AMPERSAND", "&"),
    ("OPENPAREN", "("),
    ("CLOSEPAREN", ")"),
    ("STAR", "*"),
    ("PLUS", "+"),
    ("MINUS", "-"),
    ("COMMA", ","),
    ("DOT", "."),
    ("SLASH", "/"),
    ("COLON", ":"),
    ("SEMICOLON", ";"),
    ("OPENSQ", "["),
    ("CLOSESQ", "]"),
    ("CARET", "^"),
    ("OPENBR", "{"),
    ("CLOSEBR", "}"),
    ("PIPE", "|"),
    ("TILDE", "~"),
    ("ASSIGN", ":="),
    ("LSHIFT", "<<"),
    ("RSHIFT", ">>"),
    ("LEOP", "<="),
    ("LTOP", "<"),
    ("GEOP", ">="),
    ("GTOP", ">"),
    ("EQOP", "=="),
    ("NEOP", "!="),
]

id = 0
for n, r in tokens:
    print(f"const {n} := {id};")
    id = id + 1

print("var token_names: string[] := {")
for n, r in tokens:
    print(f'\t"{r}",')
print("};")
