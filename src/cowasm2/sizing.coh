record SizeRecord is
	array: uint8[256];
	next: [SizeRecord];
end record;

var firstSizeRecord_s: SizeRecord;
var firstSizeRecord := &firstSizeRecord_s;
var currentSizeRecord: [SizeRecord];
var currentOffset: uint8;

sub RewindSizePointer() is
	currentSizeRecord := firstSizeRecord;
	currentOffset := 0;
end sub;

sub GetNextSizeRecord(): (result: [uint8]) is
	result := &currentSizeRecord.array[currentOffset];

	print_hex_i32(result as intptr as uint32);
	print(" ");
	print_hex_i8([result]);
	print_nl();
	currentOffset := currentOffset + 1;
	if currentOffset == 0 then
		var next := currentSizeRecord.next;
		if next == (0 as [SizeRecord]) then
			next := Alloc(@bytesof SizeRecord) as [SizeRecord];
			currentSizeRecord.next := next;
		end if;
		currentSizeRecord := next;
	end if;
end sub;

sub SizeInvariantError() is
	SimpleError("variable-size instruction tried to get bigger");
end sub;

